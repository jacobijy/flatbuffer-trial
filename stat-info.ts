// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class StatInfo {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StatInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

hp():number {
  return this.bb!.readUint8(this.bb_pos);
}

atk():number {
  return this.bb!.readUint8(this.bb_pos + 1);
}

def():number {
  return this.bb!.readUint8(this.bb_pos + 2);
}

spa():number {
  return this.bb!.readUint8(this.bb_pos + 3);
}

spd():number {
  return this.bb!.readUint8(this.bb_pos + 4);
}

spe():number {
  return this.bb!.readUint8(this.bb_pos + 5);
}

static sizeOf():number {
  return 6;
}

static createStatInfo(builder:flatbuffers.Builder, HP: number, ATK: number, DEF: number, SPA: number, SPD: number, SPE: number):flatbuffers.Offset {
  builder.prep(1, 6);
  builder.writeInt8(SPE);
  builder.writeInt8(SPD);
  builder.writeInt8(SPA);
  builder.writeInt8(DEF);
  builder.writeInt8(ATK);
  builder.writeInt8(HP);
  return builder.offset();
}

}
