// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class ZukanData {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ZukanData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

index():number {
  return this.bb!.readUint16(this.bb_pos);
}

group():number {
  return this.bb!.readUint8(this.bb_pos + 2);
}

static sizeOf():number {
  return 4;
}

static createZukanData(builder:flatbuffers.Builder, index: number, group: number):flatbuffers.Offset {
  builder.prep(2, 4);
  builder.pad(1);
  builder.writeInt8(group);
  builder.writeInt16(index);
  return builder.offset();
}

}
